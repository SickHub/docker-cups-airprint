# Required variables
# REPO, IMAGE_NAME
# PLATFORMS = linux/amd64,linux/arm64/v8,linux/arm/v7,...
# DOCKER_USER, DOCKER_PASS
version: 2.1
aliases:
  - &parameters
    buildx_version:
      default: v0.11.0 # github-releases:docker/buildx
      type: string
    ubuntu_version:
      default: latest
      type: string
  - &docker
      - image: docker:dind
  - &steps
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Install docker buildx
          command: |
            apk add --no-cache curl
            mkdir -p ~/.docker/cli-plugins
            baseUrl="https://github.com/docker/buildx/releases/download"
            fileName="buildx-<< parameters.buildx_version >>.linux-amd64"
            url="${baseUrl}/<< parameters.buildx_version >>/${fileName}"
            curl -sSL -o ~/.docker/cli-plugins/docker-buildx $url
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            echo 'export DOCKER_CLI_EXPERIMENTAL="enabled"' >> $BASH_ENV
      - run:
          name: Prepare docker buildx
          command: |
            docker buildx install
            docker version
            docker buildx version
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker context create xbuilder
            docker buildx create xbuilder --name xbuilder --use
            docker buildx inspect --bootstrap
      - run:
          name: Build all platforms
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then export TAG=${TAG}-dev; fi
            docker buildx build --progress plain --platform $PLATFORMS --build-arg \
              UBUNTU_VERSION=<< parameters.ubuntu_version >> -t $REPO/$IMAGE_NAME:<< parameters.ubuntu_version >> .
      - run:
          name: Testing cups
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then export TAG=${TAG}-dev; fi
            docker buildx build --progress plain --platform linux/amd64 --build-arg \
              UBUNTU_VERSION=<< parameters.ubuntu_version >> -t $REPO/$IMAGE_NAME:<< parameters.ubuntu_version >> --load .
            docker create --name airprint-test \
              -e CUPS_LPADMIN_PRINTER1="lpadmin -p test -D test -m 'lsb/usr/cups-pdf/CUPS-PDF_opt.ppd' -v cups-pdf:/" \
              $REPO/$IMAGE_NAME:<< parameters.ubuntu_version >>
            docker start airprint-test
            echo -n "Waiting for container to be up: "
            docker exec airprint-test bash -c \
              'while ! cupsctl -h localhost --share-printers 2>/dev/null; do echo -n "."; sleep 1; done'
            echo "ok"
            echo -n "Waiting for container to report healthy: "
            while [ -z "$(docker ps -f name='airprint-test' --format '{{ .Status }}' |grep '(healthy)')" ]; do 
              echo -n "."; sleep 1; 
            done
            echo "ok"
            docker ps -f name='airprint-test'
            docker logs airprint-test
            docker exec airprint-test ls -la /etc/cups/
      - run:
          name: Build and push all platforms
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then export TAG=${TAG}-dev; fi
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin &> /dev/null || exit 1
            docker buildx build --progress plain --platform $PLATFORMS --build-arg \
              UBUNTU_VERSION=<< parameters.ubuntu_version >> -t $REPO/$IMAGE_NAME:<< parameters.ubuntu_version >> --push .
jobs:
  buildx:
    parameters: *parameters
    docker: *docker
    steps: *steps

workflows:
  version: 2
  build:
    jobs:
      - buildx:
          matrix:
            parameters:
              ubuntu_version: ["latest", "jammy", "focal", "bionic"]
  weekly:
    triggers:
      - schedule:
          # mondays, 6:03 am, UTC
          cron: "3 6 * * 1"
          filters:
            branches:
              only:
                - master
    jobs:
      - buildx:
          matrix:
            parameters:
              ubuntu_version: ["latest", "jammy", "focal", "bionic"]
